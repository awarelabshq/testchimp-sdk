name: TestChimp AI Test Repair

# Trigger on push to main branches and pull requests
on:
  push:
    branches: [main, develop, staging]
  pull_request:
    branches: [main, develop]

jobs:
  testchimp-repair:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: TestChimp AI Repair
        id: testchimp
        uses: awarelabshq/testchimp-github-testrunner@v1.0.0
        with:
          # Required: TestChimp authentication
          api-key: ${{ secrets.TESTCHIMP_API_KEY }}
          project-id: ${{ secrets.TESTCHIMP_PROJECT_ID }}
          
          # Optional: Test configuration
          test-directory: 'tests'
          success-criteria: 'ORIGINAL_SUCCESS'
          mode: 'RUN_WITH_AI_REPAIR'
          headless: 'true'
          deflake-runs: '2'
      
      - name: Display Results
        run: |
          echo "ðŸŽ¯ TestChimp Results:"
          echo "Status: ${{ steps.testchimp.outputs.status }}"
          echo "Tests Executed: ${{ steps.testchimp.outputs.test-count }}"
          echo "Tests Passed: ${{ steps.testchimp.outputs.success-count }}"
          echo "Tests Failed: ${{ steps.testchimp.outputs.failure-count }}"
          echo "Tests Repaired: ${{ steps.testchimp.outputs.repaired-count }}"
          echo "Repaired Above Threshold: ${{ steps.testchimp.outputs.repaired-above-threshold }}"
          echo "Repaired Below Threshold: ${{ steps.testchimp.outputs.repaired-below-threshold }}"
          echo "Success Criteria Used: ${{ steps.testchimp.outputs.success-criteria-used }}"
          
          if [ "${{ steps.testchimp.outputs.pull-request-number }}" != "" ]; then
            echo "ðŸ”§ Pull Request Created: #${{ steps.testchimp.outputs.pull-request-number }}"
            echo "ðŸ”— PR URL: ${{ steps.testchimp.outputs.pull-request-url }}"
          fi
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const testchimp = context.payload;
            const comment = `## ðŸ¤– TestChimp Results
            
            - **Status**: ${{ steps.testchimp.outputs.status }}
            - **Tests**: ${{ steps.testchimp.outputs.test-count }} executed, ${{ steps.testchimp.outputs.success-count }} passed
            - **Repairs**: ${{ steps.testchimp.outputs.repaired-count }} tests repaired
            - **Success Criteria**: ${{ steps.testchimp.outputs.success-criteria-used }}
            
            ${{ steps.testchimp.outputs.pull-request-url && 'ðŸ”§ [View Repair PR](' + steps.testchimp.outputs.pull-request-url + ')' || '' }}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
